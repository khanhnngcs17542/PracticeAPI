{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\DXC\\\\Exercise\\\\PracticeAPI\\\\PracticeAPI\\\\clientapp\\\\src\\\\components\\\\EditProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport { Redirect } from 'react-router-dom';\n/*Import api */\n\nimport { GET_PRODUCT_ID, PUT_EDIT_PRODUCT } from '../api/apiService';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 20\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 600\n  },\n  title: {\n    fontSize: 30,\n    textAlign: 'center'\n  },\n  link: {\n    padding: 10,\n    display: 'inline-block'\n  },\n  txtInput: {\n    width: '98%',\n    margin: '1%'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport default function EditProduct({\n  match,\n  location\n}) {\n  _s();\n\n  const classes = useStyles();\n  /* SET ATTRIBUTE FORM EDIT ADD PRODUCT */\n\n  const [checkUpdate, setCheckUpdate] = useState(false);\n  const [Id, setIdProduct] = useState(0);\n  const [name, setTitle] = useState(null);\n  const [description, setBody] = useState(null);\n  /* BEFORE RUN */\n\n  useEffect(() => {\n    //console.log(location)\n    //console.log(match.params.id)\n\n    /* GET PRODUCT ID */\n    GET_PRODUCT_ID(`products`, match.params.id).then(product => {\n      setIdProduct(product.data.Id);\n      setTitle(product.data.name);\n      setBody(product.data.description);\n    });\n    /* GET API CATEGORIES */\n\n    /*GET_ALL_CATEGORIES('categories').then(item => {\r\n        setCategories(item.data);\r\n    });*/\n  }, []);\n  /* EVENT CHANGE TEXTFIELD IN FORM */\n\n  const handleChangeTitle = event => {\n    setTitle(event.target.value);\n  };\n\n  const handleChangeBody = event => {\n    setBody(event.target.value);\n  };\n  /* EVENT BUTTON SUBMIT FORM ADD PRODUCT */\n\n\n  const EditProduct = event => {\n    event.preventDefault();\n\n    if (name !== \"\" && description !== \"\" && name !== null && description !== null) {\n      let product = {\n        Name: name,\n        Description: description\n      };\n      PUT_EDIT_PRODUCT(`products/${Id}`, product).then(item => {\n        if (item.data === 1) {\n          setCheckUpdate(true);\n        }\n      });\n    } else {\n      alert(\"Bạn chưa nhập đủ thông tin!\");\n    }\n  };\n  /* CHECK setAdd, if true redirect to Home component */\n\n\n  if (checkUpdate) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.name,\n            variant: \"h4\",\n            children: \"Edit Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: true,\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"subtitle1\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"name\",\n                onChange: handleChangeTitle,\n                value: name,\n                name: \"name\",\n                variant: \"outlined\",\n                className: classes.txtInput,\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"subtitle1\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-multiline-static\",\n                onChange: handleChangeBody,\n                defaultValue: description,\n                name: \"Description\",\n                className: classes.txtInput,\n                multiline: true,\n                rows: 4,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                onClick: EditProduct,\n                fullWidth: true,\n                variant: \"contained\",\n                color: \"primary\",\n                className: classes.submit,\n                children: \"Update product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProduct, \"tAGvURM5axr4FbO/2Pf+JCiIgN8=\", false, function () {\n  return [useStyles];\n});\n\n_c = EditProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProduct\");","map":{"version":3,"sources":["D:/DXC/Exercise/PracticeAPI/PracticeAPI/clientapp/src/components/EditProduct.js"],"names":["React","useEffect","useState","makeStyles","Paper","Grid","Typography","TextField","Button","Alert","Redirect","GET_PRODUCT_ID","PUT_EDIT_PRODUCT","useStyles","theme","root","flexGrow","marginTop","paper","padding","spacing","margin","maxWidth","title","fontSize","textAlign","link","display","txtInput","width","submit","EditProduct","match","location","classes","checkUpdate","setCheckUpdate","Id","setIdProduct","name","setTitle","description","setBody","params","id","then","product","data","handleChangeTitle","event","target","value","handleChangeBody","preventDefault","Name","Description","item","alert"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n/*Import api */\r\nimport { GET_PRODUCT_ID, PUT_EDIT_PRODUCT } from '../api/apiService';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        marginTop: 20\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        margin: 'auto',\r\n        maxWidth: 600,\r\n    },\r\n    title: {\r\n        fontSize: 30,\r\n        textAlign: 'center'\r\n    },\r\n    link: {\r\n        padding: 10,\r\n        display: 'inline-block'\r\n    },\r\n    txtInput: {\r\n        width: '98%',\r\n        margin: '1%'\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\nexport default function EditProduct({ match, location }) {\r\n    const classes = useStyles();\r\n    /* SET ATTRIBUTE FORM EDIT ADD PRODUCT */\r\n    const [checkUpdate, setCheckUpdate] = useState(false);\r\n    const [Id, setIdProduct] = useState(0);\r\n    const [name, setTitle] = useState(null)\r\n    const [description, setBody] = useState(null)\r\n\r\n\r\n    /* BEFORE RUN */\r\n    useEffect(() => {\r\n        //console.log(location)\r\n        //console.log(match.params.id)\r\n        /* GET PRODUCT ID */\r\n        GET_PRODUCT_ID(`products`, match.params.id).then(product => {\r\n            setIdProduct(product.data.Id);\r\n            setTitle(product.data.name);\r\n            setBody(product.data.description);\r\n\r\n        })\r\n        /* GET API CATEGORIES */\r\n        /*GET_ALL_CATEGORIES('categories').then(item => {\r\n            setCategories(item.data);\r\n        });*/\r\n\r\n    }, [])\r\n\r\n    /* EVENT CHANGE TEXTFIELD IN FORM */\r\n    const handleChangeTitle = (event) => {\r\n        setTitle(event.target.value)\r\n    }\r\n    const handleChangeBody = (event) => {\r\n        setBody(event.target.value)\r\n    }\r\n\r\n\r\n    /* EVENT BUTTON SUBMIT FORM ADD PRODUCT */\r\n    const EditProduct = (event) => {\r\n        event.preventDefault();\r\n        if (name !== \"\" && description !== \"\" && name !== null && description !== null) {\r\n            let product = {\r\n                Name: name,\r\n                Description: description\r\n            }\r\n            PUT_EDIT_PRODUCT(`products/${Id}`, product).then(item => {\r\n                if (item.data === 1) {\r\n                    setCheckUpdate(true);\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Bạn chưa nhập đủ thông tin!\");\r\n        }\r\n    }\r\n\r\n    /* CHECK setAdd, if true redirect to Home component */\r\n    if (checkUpdate) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <Typography className={classes.name} variant=\"h4\">\r\n                            Edit Product\r\n                    </Typography>\r\n                        <Grid item xs={12} sm container>\r\n                            <Grid item xs={12}>\r\n                                <Typography gutterBottom variant=\"subtitle1\">\r\n                                    Name\r\n                            </Typography>\r\n                                <TextField id=\"name\" onChange={handleChangeTitle} value={name} name=\"name\" variant=\"outlined\" className={classes.txtInput} size=\"small\" />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography gutterBottom variant=\"subtitle1\">\r\n                                    Description\r\n                            </Typography>\r\n                                <TextField id=\"outlined-multiline-static\" onChange={handleChangeBody} defaultValue={description} name=\"Description\" className={classes.txtInput} multiline rows={4} variant=\"outlined\" />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Button type=\"button\" onClick={EditProduct} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} >\r\n                                    Update product\r\n                            </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}